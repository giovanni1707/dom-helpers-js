/**
 * DOM Helpers - Storage Module
 * Web Storage API utilities that integrate with the main DOM Helpers library
 * 
 * Features:
 * - Storage object for localStorage and sessionStorage
 * - Automatic JSON serialization/deserialization
 * - Expiry system for time-based storage
 * - Namespace support for organized storage
 * - Forms integration for auto-save/restore
 * - Dual API: shorthand (set/get) and vanilla-like (setItem/getItem)
 * - Seamless integration with Elements, Collections, Selector, and Forms
 * 
 * @version 1.0.0
 * @license MIT
 */
!function(e){"use strict";function t(e){if(!e)return!0;try{const t=JSON.parse(e);return t.expires&&Date.now()>t.expires}catch(e){return!1}}void 0===e.Elements&&"undefined"==typeof Elements&&console.warn("[DOM Helpers Storage] Main DOM Helpers library should be loaded before the Storage module for full integration");class r{constructor(t="localStorage",r=""){this.storageType=t,this.namespace=r,this.storage=e[t],this.storage||(console.warn(`[DOM Helpers Storage] ${t} is not available`),this.storage={getItem:()=>null,setItem:()=>{},removeItem:()=>{},clear:()=>{},key:()=>null,length:0})}_getKey(e){return this.namespace?`${this.namespace}:${e}`:e}_stripNamespace(e){if(!this.namespace)return e;const t=`${this.namespace}:`;return e.startsWith(t)?e.slice(t.length):e}set(e,t,r={}){try{const s=this._getKey(e),o=function(e,t={}){const r={value:e,type:typeof e,timestamp:Date.now()};return t.expires&&("number"==typeof t.expires?r.expires=Date.now()+1e3*t.expires:t.expires instanceof Date&&(r.expires=t.expires.getTime())),JSON.stringify(r)}(t,r);return this.storage.setItem(s,o),!0}catch(t){return console.warn(`[DOM Helpers Storage] Failed to set ${e}:`,t.message),!1}}get(e,r=null){try{const s=this._getKey(e),o=this.storage.getItem(s);if(null===o)return r;if(t(o))return this.storage.removeItem(s),r;const a=function(e){if(!e)return null;try{const t=JSON.parse(e);return t.expires&&Date.now()>t.expires?null:t.value}catch(t){return e}}(o);return null!==a?a:r}catch(t){return console.warn(`[DOM Helpers Storage] Failed to get ${e}:`,t.message),r}}remove(e){try{const t=this._getKey(e);return this.storage.removeItem(t),!0}catch(t){return console.warn(`[DOM Helpers Storage] Failed to remove ${e}:`,t.message),!1}}has(e){try{const r=this._getKey(e),s=this.storage.getItem(r);return null!==s&&(!t(s)||(this.storage.removeItem(r),!1))}catch(e){return!1}}keys(){try{const e=[],r=this.namespace?`${this.namespace}:`:"";for(let s=0;s<this.storage.length;s++){const o=this.storage.key(s);if(o&&(!this.namespace||o.startsWith(r))){if(t(this.storage.getItem(o))){this.storage.removeItem(o);continue}e.push(this._stripNamespace(o))}}return e}catch(e){return console.warn("[DOM Helpers Storage] Failed to get keys:",e.message),[]}}values(){try{const e=[];return this.keys().forEach(t=>{const r=this.get(t);null!==r&&e.push(r)}),e}catch(e){return console.warn("[DOM Helpers Storage] Failed to get values:",e.message),[]}}entries(){try{const e=[];return this.keys().forEach(t=>{const r=this.get(t);null!==r&&e.push([t,r])}),e}catch(e){return console.warn("[DOM Helpers Storage] Failed to get entries:",e.message),[]}}clear(){try{if(this.namespace){this.keys().forEach(e=>this.remove(e))}else this.storage.clear();return!0}catch(e){return console.warn("[DOM Helpers Storage] Failed to clear storage:",e.message),!1}}size(){return this.keys().length}namespace(e){const t=this.namespace?`${this.namespace}:${e}`:e;return new r(this.storageType,t)}setItem(e,t,r){return this.set(e,t,r)}getItem(e,t){return this.get(e,t)}removeItem(e){return this.remove(e)}setMultiple(e,t={}){const r={};return Object.entries(e).forEach(([e,s])=>{r[e]=this.set(e,s,t)}),r}getMultiple(e,t=null){const r={};return e.forEach(e=>{r[e]=this.get(e,t)}),r}removeMultiple(e){const t={};return e.forEach(e=>{t[e]=this.remove(e)}),t}increment(e,t=1){const r=this.get(e,0),s=("number"==typeof r?r:0)+t;return this.set(e,s),s}decrement(e,t=1){return this.increment(e,-t)}toggle(e){const t=!this.get(e,!1);return this.set(e,t),t}cleanup(){try{let e=0;const r=this.namespace?`${this.namespace}:`:"";for(let s=this.storage.length-1;s>=0;s--){const o=this.storage.key(s);!o||this.namespace&&!o.startsWith(r)||t(this.storage.getItem(o))&&(this.storage.removeItem(o),e++)}return e}catch(e){return console.warn("[DOM Helpers Storage] Failed to cleanup:",e.message),0}}stats(){try{const e=this.keys(),t=this.values(),r=JSON.stringify(t).length;return{keys:e.length,totalSize:r,averageSize:e.length>0?Math.round(r/e.length):0,namespace:this.namespace||"global",storageType:this.storageType}}catch(e){return{keys:0,totalSize:0,averageSize:0,namespace:this.namespace||"global",storageType:this.storageType}}}}function s(){if(void 0===e.Forms&&"undefined"==typeof Forms)return void console.log("[DOM Helpers Storage] Forms not available, skipping integration");const t=e.Forms||Forms;if(!t.helper||"function"!=typeof t.helper._getForm){if(console.warn("[DOM Helpers Storage] Forms helper not properly initialized, trying alternative approach"),t&&"object"==typeof t){try{console.log("[DOM Helpers Storage] Using direct form enhancement approach")}catch(e){console.warn("[DOM Helpers Storage] Could not wrap Forms proxy:",e.message)}}return}console.log("[DOM Helpers Storage] Adding Forms integration");const r=t.helper._getForm.bind(t.helper);t.helper._getForm=function(e){return o(r(e))}}function o(e){return!e||e._hasStorageIntegration||(e.autoSave=function(t,r={}){const{storage:s="localStorage",interval:o=1e3,events:a=["input","change"],namespace:n=""}=r,l=n?i.namespace(n):"sessionStorage"===s?i.session:i,c=()=>{const s=e.values;l.set(t,s,r)};return a.forEach(t=>{e.addEventListener(t,()=>{clearTimeout(e._autoSaveTimeout),e._autoSaveTimeout=setTimeout(c,o)})}),c(),e._autoSaveKey=t,e._autoSaveStorage=l,e},e.restore=function(t,r={}){const{storage:s="localStorage",namespace:o="",clearAfterRestore:a=!1}=r,n=o?i.namespace(o):"sessionStorage"===s?i.session:i,l=n.get(t);return l&&(e.values=l,a&&n.remove(t)),e},e.clearAutoSave=function(){return e._autoSaveTimeout&&clearTimeout(e._autoSaveTimeout),e._autoSaveKey&&e._autoSaveStorage&&e._autoSaveStorage.remove(e._autoSaveKey),e},Object.defineProperty(e,"_hasStorageIntegration",{value:!0,writable:!1,enumerable:!1,configurable:!1})),e}const a=new r("localStorage"),n=new r("sessionStorage"),i=a;function l(){document.querySelectorAll("form[id]").forEach(t=>{if(!t._hasStorageIntegration&&(console.log(`[DOM Helpers Storage] Enhancing DOM form ${t.id} directly`),o(t),void 0!==e.Forms||"undefined"!=typeof Forms)){const r=e.Forms||Forms;try{r&&r.helper&&r.helper.cache&&r.helper.cache.set(t.id,t)}catch(e){console.warn(`[DOM Helpers Storage] Could not update Forms cache for ${t.id}:`,e.message)}}})}i.session=n,i.local=a,i.namespace=e=>a.namespace(e),i.cleanup=()=>({local:a.cleanup(),session:n.cleanup()}),i.stats=()=>({local:a.stats(),session:n.stats()}),"undefined"!=typeof module&&module.exports?module.exports={Storage:i,StorageHelper:r}:"function"==typeof define&&define.amd?define([],function(){return{Storage:i,StorageHelper:r}}):(e.Storage=i,e.StorageHelper=r),"undefined"!=typeof document&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){s(),setTimeout(l,100)}):setTimeout(function(){s(),l()},0)),e.DOMHelpers&&(e.DOMHelpers.Storage=i,e.DOMHelpers.StorageHelper=r),console.log("[DOM Helpers Storage] Storage module loaded successfully")}("undefined"!=typeof window?window:"undefined"!=typeof global?global:this);